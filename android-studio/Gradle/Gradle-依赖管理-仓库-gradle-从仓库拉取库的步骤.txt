https://inthecheesefactory.com/blog/how-to-upload-library-to-jcenter-maven-central-as-dependency/en

How does gradle pull a library from Repository?

Before we start talking about how to upload a library to jcenter. We should start with how gradle fetch a library from repository. For example, when we type like below in build.gradle, how are those library files magically downloaded to your project.

compile 'com.inthecheesefactory.thecheeselibrary:fb-like:0.9.3'
Basically we have to know the form of library string first. It consists of 3 parts:

GROUP_ID:ARTIFACT_ID:VERSION

In the above case, GROUP_ID is com.inthecheesefactory.thecheeselibrary while ARTIFACT_ID is fb-like and VERSION is 0.9.3

For the meaning, GROUP_ID defines the name of library's group. It is possible that there would be more than one library that work the different job in the same context. If library are in the same group, it would share the same GROUP_ID. Generally we name it with developer's package name and then follow with the name of library's group, for example, com.squareup.picasso. And then defines the real name of the library in ARTIFACT_ID. For VERSION, there is nothing but a version number. Although it could be any text but I suggest to set it in x.y.z format and might follow with -beta if you want.

Here is the real example of library from Square. You will notice that each one could be easily recognised the library's and developer's name.

dependencies {
  compile 'com.squareup:otto:1.3.7'
  compile 'com.squareup.picasso:picasso:2.5.2'
  compile 'com.squareup.okhttp:okhttp:2.4.0'
  compile 'com.squareup.retrofit:retrofit:1.9.0'
}

What will happen when we add dependencies like above? Easy. Gradle will ask Maven Repository Server that does the library exist if yes gradle will get a path of the requested library which mostly in the form of GROUP_ID/ARTIFACT_ID/VERSION_ID, for example, you could find library files of com.squareup:otto:1.3.7 from 
http://jcenter.bintray.com/com/squareup/otto/1.3.7 and 
https://oss.sonatype.org/content/repositories/releases/com/squareup/otto/1.3.7/.

compile('com.mcxiaoke.volley:library:1.0.19@aar')
http://jcenter.bintray.com/com/mcxiaoke/volley/library/1.0.19/

And then Android Studio would download those files to our machine and compile with our project per your request. That's all. Nothing complicated !

I believe that you should know understand clearly that library pulled from repository is nothing special but jar or aar files hosted on repository server. It could be compared just like to download those files yourselve, copy and compile everything along with your project. But the big benefits you get from dependency system available on gradle is you don't have to do anything but just type some texts and that's all. The library would suddenly be useable in your project also with versioning system.