http://www.cnblogs.com/CloudTeng/p/3422009.html

在Plugin中，我们可以向Project中
加入新的Task，
定义configurations和property等。

我们3种方法可以自定义Plugin，
这些方法和自定义Task类型的3种方法相似。

在接下来的例子中，
我们将分别通过这3种方法来创建一个DateAndTimePlugin，
该Plugin定义了2个Task，
分别用于输出系统当前的日期和时间，
另外，我们可以配置日期和时间的输出格式

---------------------------------------------------------
（1）在build.gradle文件中直接定义Plugin
---------------------------------------------------------
和在build.gradle文件中定义Task类型一样，我们可以将对Plugin的定义直接写在build.gradle中

apply plugin: DateAndTimePlugin


dateAndTime {
    timeFormat = 'HH:mm:ss.SSS'
    dateFormat = 'MM/dd/yyyy'
}

class DateAndTimePlugin implements Plugin<Project> {
    void apply(Project project) {

        project.extensions.create("dateAndTime", DateAndTimePluginExtension)

        project.task('showTime') << {
            println "Current time is " + new Date().format(project.dateAndTime.timeFormat)
        }

        project.tasks.create('showDate') << {
            println "Current date is " + new Date().format(project.dateAndTime.dateFormat)
        }
    }
}

class DateAndTimePluginExtension {
    String timeFormat = "MM/dd/yyyyHH:mm:ss.SSS"
    String dateFormat = "yyyy-MM-dd"
}

每一个自定义的Plugin都需要实现Plugin<T>接口，
事实上，除了给Project编写Plugin之外，我们还可以为其他Gradle类编写Plugin。
该接口定义了一个apply()方法，在该方法中，我们可以操作Project，
比如向其中加入Task，定义额外的Property等

---------------------------------------------------------
（2）在当前工程中定义Plugin
---------------------------------------------------------
在当前工程中的buildSrc/src/main/groovy/davenkin目录下创建 DateAndTimePlugin.groovy 文件，
将build.gradle中定义 DateAndTimePlugin 的代码提取到给文件中，
但是除去对 DateAndTimePluginExtension 的定义，
因为我们将在另外一个单独的文件中定义 DateAndTimePluginExtension

---------------------------------------------------------
（3）在单独的项目中创建Plugin
---------------------------------------------------------