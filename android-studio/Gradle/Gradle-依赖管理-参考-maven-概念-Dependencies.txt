https://en.wikipedia.org/wiki/Apache_Maven#Dependencies

A central feature in Maven is dependency management. 
Maven's dependency-handling mechanism 
is organized around a coordinate system identifying individual artifacts 
such as software libraries or modules. 

The POM example above references the JUnit coordinates 
as a direct dependency of the project. 
A project that needs, say, 
the Hibernate library simply has to 
declare Hibernate's project coordinates in its POM. 

Maven will automatically download the dependency 
and the dependencies that Hibernate itself needs (called transitive dependencies) 
and store them in the user's local repository. 
Maven 2 Central Repository is used by default to search for libraries, 
but one can configure the repositories to be used 
(e.g., company-private repositories) within the POM.

There are search engines such as The Central Repository Search Engine 
which can be used to find out coordinates for different open-source libraries and frameworks.

Projects developed on a single machine 
can depend on each other through the local repository. 
The local repository is a simple folder structure that acts both 
1）as a cache for downloaded dependencies and 
2）as a centralized storage place for locally built artifacts. 

The Maven command mvn install 
1）builds a project and 
2）places its binaries in the local repository. 
Then other projects can utilize this project 
by specifying its coordinates in their POMs.