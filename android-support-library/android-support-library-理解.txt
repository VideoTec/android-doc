http://developer.android.com/intl/zh-cn/tools/support-library/features.html?utm_campaign=adp_series_sdkversion_010616&utm_source=medium&utm_medium=blog

The Android Support Library package contains several libraries 
that can be included in your application. 

Each of these libraries supports 
1）a specific range of Android platform versions and 
2）set of features.

In general, we recommend including the 
1）v4 support and 
2）v7 appcompat libraries, 

because they 
1）support a wide range of Android versions and 
2）provide APIs for recommended user interface patterns.

support library 列表：
01）v4 Support Library
02）Multidex Support Library
03）v7 Support Libraries
04）v8 Support Library
05）v13 Support Library
06）v14 Preference Support Library
07）v17 Preference Support Library for TV
08）v17 Leanback Library
09）Annotations Support Library
10）Design Support Library
11）Custom Tabs Support Library
12）Percent Support Library
13）App Recommendation Support Library for TV

https://medium.com/google-developers/picking-your-compilesdkversion-minsdkversion-targetsdkversion-a098a0341ebd?linkId=20147489#.tniwwh3fj

1）gradle 中指定的 compileSdkVersion
Note that if you use the Support Library, 
compiling with the latest SDK 
is a requirement for using the latest Support Library releases. 

For example, 
to use the 23.1.1 Support Library, 
you must have a compileSdkVersion of at least 23 (those first numbers need to match!). 
In general, a new version of the Support Library 
is released alongside a new platform version, 
providing compatibility shims to newly added APIs as well as new features.

2）minSdkVersion
Keep in mind that libraries you use, 
such as any of the Support Libraries or Google Play services, 
may have their own minSdkVersion
-- your app’s minSdkVersion must be at least as high as your dependencies’ minSdkVersion
-- if you have libraries that require 4, 7, and 9, 
your minSdkVersion must be at least 9. 

In rare cases where you want to continue to use a library 
with a higher minSdkVersion than your app 
(and deal with all edge cases/ensure the library is only used on newer platform versions), 
you can use the tools:overrideLibrary marker, but make sure to test thoroughly!