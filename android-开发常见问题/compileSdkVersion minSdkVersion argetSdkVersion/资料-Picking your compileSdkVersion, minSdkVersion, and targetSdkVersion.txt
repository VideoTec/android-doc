关键是 targetSdkVersion 的设置问题：

http://stackoverflow.com/questions/26694108/what-is-the-difference-between-compilesdkversion-and-targetsdkversion
targetSdkVersion 作用：

The targetSdkVersion has nothing to do with how your app is compiled or 
what APIs you can utilize. 
The targetSdkVersion is supposed to indicate that 
you have tested your app on (presumably up to and including) the version you specify. 
This is more like a certification or sign off 
you are giving the Android OS as a hint to 
how it should handle your app in terms of OS features.

理解这句话，关键是理解，你的APP，可能运行在
1） 比 target 高的版本上
2） 比 target 低的版本上

For example, setting this value to "11" or higher 
allows the system to apply a new default theme (Holo) to your app 
when running on Android 3.0 or higher...

For all practical purposes, 
most apps are going to want to set targetSdkVersion 
to the latest released version of the API. 
This will ensure your app looks as good as possible on the most recent Android devices. 
If you do not specify the targetSdkVersion, 
it defaults to the minSdkVersion

compileSdkVersion
The compileSdkVersion is the version of the API the app is compiled against. 
This means you can use Android API features included 
in that version of the API (as well as all previous versions, obviously). 
If you try and use API 16 features but set compileSdkVersion to 15, 
you will get a compilation error. 
If you set compileSdkVersion to 16 you can still run the app on a API 15 device 
as long as your app's execution paths do not attempt to invoke any APIs specific to API 16.

----------------------------------------------------------------
minSdkVersion (lowest possible) < targetSdkVersion
----------------------------------------------------------------
的缺点：
With some of the behavior changes being very visible to users 
(the deprecation of the menu button, runtime permissions, etc), 
updating to target the latest SDK should be a high priority for every app

----------------------------------------------------------------
minSdkVersion (lowest possible) == targetSdkVersion
----------------------------------------------------------------
产生运行时错误的情况是:
使用了targetSdkVersion这个SDK版本中的一个特性，但是这个特性在低版本中是不支持的

GOOGLE 说法是：
That doesn’t mean you have to use every new feature introduced

它强调了一句：
 please, please test before updating your targetSdkVersion! Your users will thank you.
----------------------------------------------------------------
https://medium.com/google-developers/picking-your-compilesdkversion-minsdkversion-targetsdkversion-a098a0341ebd?linkId=20147489#.1y2f8i7ml
------------------------------------------

----------------------------------------------------------------
compileSdkVersion 建议使用最新的
即
minSdkVersion (lowest possible) <= targetSdkVersion == compileSdkVersion (latest SDK)
------------------------------------------
注意：
the Support Library, 
compiling with the latest SDK is a requirement 
for using the latest Support Library releases

---------------------------------------------
minSdkVersion
---------------------------------------------
minSdkVersion 作用：

1）one of the signals the Google Play Store uses 
to determine which of a user’s devices an app can be installed on

2）开发阶段
warning you when you use any APIs above your minSdkVersion （lint 检测工具实现的）

注意：
such as any of the Support Libraries or Google Play services, 
may have their own minSdkVersion