
option java_package = "com.feinno.androidprotocol.pb.args";
option java_outer_classname = "PbSessionConfiguration";

After the package declaration, 
you can see two options that are Java-specific: 
java_package and java_outer_classname. 


---------------------------------------------
例子：
---------------------------------------------

文件名：
api.proto

代码：
syntax = "proto2";

option java_package = "com.feinno.androidprotocol.pb.args";
option java_outer_classname = "API";

使用方法：
API.ClientPublishMessage.Builder builder = API.ClientPublishMessage.newBuilder();
API.Content.parseFrom(msg.content.getBytes("UTF-8"))

---------------------------------------------
java_package 
---------------------------------------------
specifies in what Java package name your generated classes should live. 
If you don't specify this explicitly, 
it simply matches the package name given by the package declaration, 
but these names usually aren't appropriate Java package names 
(since they usually don't start with a domain name). The 

---------------------------------------------
java_outer_classname option defines the class name 
---------------------------------------------
which should contain all of the classes in this file. 
If you don't give a java_outer_classname explicitly, 
it will be generated by converting the file name to camel case.
For example, 
"my_proto.proto" would, by default, 
use "MyProto" as the outer class name.