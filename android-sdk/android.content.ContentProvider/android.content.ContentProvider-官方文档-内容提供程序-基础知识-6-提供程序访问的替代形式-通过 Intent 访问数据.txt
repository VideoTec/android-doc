通过 Intent 访问数据

Intent 可以提供对内容提供程序的间接访问。
即使您的应用不具备访问权限，
您也可以通过以下方式允许用户访问提供程序中的数据：
从具有权限的应用中获取回结果 Intent，
或者通过激活具有权限的应用，然后让用户在其中工作。

------------------------------------
通过临时权限获取访问权限
------------------------------------

即使您没有适当的访问权限，
也可以通过以下方式访问内容提供程序中的数据：
将 Intent 发送至具有权限的应用，
然后接收回包含“URI”权限的结果 Intent。 
这些是特定内容 URI 的权限，将持续至接收该权限的 Activity 结束。 
具有永久权限的应用将通过在结果 Intent 中设置标志来授予临时权限：

读取权限： FLAG_GRANT_READ_URI_PERMISSION
写入权限： FLAG_GRANT_WRITE_URI_PERMISSION

注：
这些标志不会为其授权包含在内容 URI 中的提供程序 
提供常规的读取或写入访问权限。
访问权限仅适用于 URI 本身。

提供程序使用 
<provider> 元素的 android:grantUriPermission 属性以及 
<provider> 元素的 <grant-uri-permission> 子元素在其清单文件中定义内容 URI 的 URI 权限。
安全与权限指南中“URI 权限”部分更加详细地说明了 URI 权限机制。

例如，
即使您没有 READ_CONTACTS 权限，
也可以在联系人提供程序中检索联系人的数据。
您可能希望在向联系人发送电子生日祝福的应用中执行此操作。 
您更愿意让用户控制应用所使用的联系人，而不是请求 READ_CONTACTS，
让您能够访问用户的所有联系人及其信息。 
要执行此操作，您需要使用以下进程：

1）您的应用会使用方法 startActivityForResult() 发送包含操作 
ACTION_PICK 和
“联系人”MIME 类型 CONTENT_ITEM_TYPE 的 Intent 对象。

2）由于此 Intent 与“联系人”应用的“选择” Activity 的 Intent 过滤器相匹配，
因此 Activity 会显示在前台。

3）在选择 Activity 中，用户选择要更新的联系人。 
发生此情况时，选择 Activity 会调用 setResult(resultcode, intent) 以
设置用于返回至应用的 Intent。 
Intent 包含用户选择的联系人的内容 URI，
以及“extras”标志 FLAG_GRANT_READ_URI_PERMISSION。 
这些标志会为您的应用授予读取内容 URI 所指向的联系人的数据的 URI 权限。
然后，选择 Activity 会调用 finish() 以返回对应用的控制。

4）您的 Activity 会返回至前台，
系统会调用您的 Activity 的 onActivityResult() 方法。
此方法会收到“联系人”应用中选择 Activity 所创建的结果 Intent。

5）通过来自结果 Intent 的内容 URI，
您可以读取来自联系人提供程序的联系人数据，
即使您未在清单文件中请求对该提供程序的永久读取访问权限。 
您可以获取联系人的生日信息或其电子邮件地址，
然后发送电子祝福。

------------------------------------
使用其他应用
------------------------------------

允许用户修改您无权访问的数据的简单方法是激活具有权限的应用，
让用户在其中执行工作。

例如，
日历应用接受 ACTION_INSERT Intent，
这让您可以激活应用的插入 UI。
您可以在此 Intent（应用将使用该 Intent 来预先填充 UI）中传递“额外”数据，
由于定期事件具有复杂的语法，
因此将事件插入日历提供程序的首选方式是激活具有 ACTION_INSERT 的日历应用，
然后让用户在其中插入事件。