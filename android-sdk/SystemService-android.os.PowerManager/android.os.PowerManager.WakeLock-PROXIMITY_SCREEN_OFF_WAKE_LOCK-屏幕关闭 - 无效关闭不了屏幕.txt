    /**
     * Wake lock level: Turns the screen off when the proximity sensor activates.
     * <p>
     * If the proximity sensor detects that an object is nearby, the screen turns off
     * immediately.  Shortly after the object moves away, the screen turns on again.
     * </p><p>
     * A proximity wake lock does not prevent the device from falling asleep
     * unlike {@link #FULL_WAKE_LOCK}, {@link #SCREEN_BRIGHT_WAKE_LOCK} and
     * {@link #SCREEN_DIM_WAKE_LOCK}.  If there is no user activity and no other
     * wake locks are held, then the device will fall asleep (and lock) as usual.
     * However, the device will not fall asleep while the screen has been turned off
     * by the proximity sensor because it effectively counts as ongoing user activity.
     * </p><p>
     * Since not all devices have proximity sensors, use {@link #isWakeLockLevelSupported}
     * to determine whether this wake lock level is supported.
     * </p><p>
     * Cannot be used with {@link #ACQUIRE_CAUSES_WAKEUP}.
     * </p>
     */
    public static final int PROXIMITY_SCREEN_OFF_WAKE_LOCK = 0x00000020;
    
    必须和传感器同时使用？
    必须，配合 PROXIMITY 传感器，一起使用。

------------------------------------------------------------------------------------
    现在几乎每个手机都有距离感应器,
------------------------------------------------------------------------------------
    通过举例感应器可获得距离.距离感应器由SensorManager管理:
sensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
sensor = sensorManager.getDefaultSensor(Sensor.TYPE_PROXIMITY);
sensorManager.registerListener(this, sensor, SensorManager.SENSOR_DELAY_NORMAL);

    Activity还需实现SensorEventListener接口,覆写其方法:
@Override
public void onSensorChanged(SensorEvent event) {
    float value = event.values[0];
 
    if (playerManager.isPlaying()){
        if (value == sensor.getMaximumRange()) {
            playerManager.changeToSpeaker();
            setScreenOn();
        } else {
            playerManager.changeToReceiver();
            setScreenOff();
        }
    } else {
        if(value == sensor.getMaximumRange()){
            playerManager.changeToSpeaker();
            setScreenOn();
        }
    }
}