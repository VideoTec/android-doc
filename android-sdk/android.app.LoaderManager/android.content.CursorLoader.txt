http://developer.android.com/reference/android/content/CursorLoader.html

java.lang.Object
   ↳	android.content.Loader<android.database.Cursor>
 	   ↳	android.content.AsyncTaskLoader<android.database.Cursor>
 	 	   ↳	android.content.CursorLoader

A loader that queries the ContentResolver and returns a Cursor. This class implements the Loader protocol in a standard way for querying cursors, building on AsyncTaskLoader to perform the cursor query on a background thread so that it does not block the application's UI.

A CursorLoader must be built with the full information for the query to perform, either through the CursorLoader(Context, Uri, String[], String, String[], String) or creating an empty instance with CursorLoader(Context) and filling in the desired paramters with setUri(Uri), setSelection(String), setSelectionArgs(String[]), setSortOrder(String), and setProjection(String[]).

--------------------------------------------------------
http://blog.sina.com.cn/s/blog_62c5894901014g5x.html
--------------------------------------------------------
在Android3.0中，Google引入了一种数据异步加载机制，
该机制的核心，便是LoaderManager、Loader，
顾名思义，LoaderManager是Loader的管理者，而Loader便是数据加载器，
你可以根据自己的需要实现形形色色的数据加载器

每个Activity和Fragment中，都会有且只有一个LoaderManager，而LoaderManager中可以有多个Loader

Google倒是提供了一个标准的Loader，
即CursorLoader，它是Loader的标准实现，如果你的数据能够用Cursor表示，
比如来自SQLiteDatabase的数据就是标准的Cursor，那么这个类对你而言就够用了