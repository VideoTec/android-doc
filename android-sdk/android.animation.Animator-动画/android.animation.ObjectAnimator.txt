https://developer.android.com/reference/android/animation/ObjectAnimator.html

java.lang.Object
   ↳	android.animation.Animator
 	   ↳	android.animation.ValueAnimator
 	 	   ↳	android.animation.ObjectAnimator

This subclass of ValueAnimator provides 
support for animating properties on target objects. 
The constructors of this class take parameters to define the target object 
that will be animated as well as the name of the property that will be animated. 
Appropriate set/get functions are then determined internally and 
the animation will call these functions as necessary to animate the property.

Animators can be created from either code or resource files, as shown here:

<objectAnimator xmlns:android="http://schemas.android.com/apk/res/android"
    android:duration="1000"
    android:valueTo="200"
    android:valueType="floatType"
    android:propertyName="y"
    android:repeatCount="1"
    android:repeatMode="reverse"/>
    
When using resource files, 
it is possible to use PropertyValuesHolder and Keyframe to create more complex animations. 
Using PropertyValuesHolders allows animators to animate several properties in parallel, 
as shown in this sample:

<objectAnimator xmlns:android="http://schemas.android.com/apk/res/android"
                android:duration="1000"
                android:repeatCount="1"
                android:repeatMode="reverse">
    <propertyValuesHolder android:propertyName="x" android:valueTo="400"/>
    <propertyValuesHolder android:propertyName="y" android:valueTo="200"/>
</objectAnimator>

Using Keyframes allows animations to follow more complex paths from the start to the end values. 
Note that you can specify explicit fractional values (from 0 to 1) for each keyframe to determine when, 
in the overall duration, the animation should arrive at that value. 
Alternatively, you can leave the fractions off and 
the keyframes will be equally distributed within the total duration. 
Also, a keyframe with no value will derive its value from the target object when the animator starts, 
just like animators with only one value specified. 
In addition, an optional interpolator can be specified. 
The interpolator will be applied on the interval 
between the keyframe that the interpolator is set on and the previous keyframe. 
When no interpolator is supplied, the default linear interpolator will be used.

<propertyValuesHolder android:propertyName="x" >
    <keyframe android:fraction="0" android:value="800" />
    <keyframe android:fraction=".2"
              android:interpolator="@android:anim/accelerate_interpolator"
              android:value="1000" />
    <keyframe android:fraction="1"
              android:interpolator="@android:anim/accelerate_interpolator"
              android:value="400" />
</propertyValuesHolder>
<propertyValuesHolder android:propertyName="y" >
    <keyframe/>
    <keyframe android:fraction=".2"
              android:interpolator="@android:anim/accelerate_interpolator"
              android:value="300"/>
    <keyframe android:interpolator="@android:anim/accelerate_interpolator"
              android:value="1000" />
</propertyValuesHolder>