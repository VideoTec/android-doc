img/activity-lifecycle.png

you put your app to background, android is then allowed to destroy your app. 
onDestroy is not guaranteed to be called, you have to be prepared for that, as you say onPause is called so you can use it.

There are three key loops you may be interested in monitoring within your activity:

整个生命时期：( onCreate(Bundle)  onDestroy() )
The entire lifetime of an activity happens between the first call to onCreate(Bundle) through to a single final call to onDestroy(). An activity will do all setup of "global" state in onCreate(), and release all remaining resources in onDestroy(). For example, if it has a thread running in the background to download data from the network, it may create that thread in onCreate() and then stop the thread in onDestroy().

可见生命时期  ( onStart()  onStop() )
The visible lifetime of an activity happens between a call to onStart() until a corresponding call to onStop(). During this time the user can see the activity on-screen, though it may not be in the foreground and interacting with the user. Between these two methods you can maintain resources that are needed to show the activity to the user. For example, you can register a BroadcastReceiver in onStart() to monitor for changes that impact your UI, and unregister it in onStop() when the user no longer sees what you are displaying. The onStart() and onStop() methods can be called multiple times, as the activity becomes visible and hidden to the user.

前景生命时期 ( onResume()  onPause() )
The foreground lifetime of an activity happens between a call to onResume() until a corresponding call to onPause(). During this time the activity is in front of all other activities and interacting with the user. An activity can frequently go between the resumed and paused states -- for example when the device goes to sleep, when an activity result is delivered, when a new intent is delivered -- so the code in these methods should be fairly lightweight.

onRestart()
Called after your activity has been stopped, prior to it being started again. Always followed by onStart()
1. 这个activitys停止过
2. 进程没有被杀死