orientation[英][ˌɔ:riənˈteɪʃn] [美][ˌɔriɛnˈteʃən, -ən-, ˌor-] 
方向，定位，取向，排列方向；任职培训；（外交等的）方针[态度]的确定；环境判定

----------------------------------------------------------
public final void setDisplayOrientation (int degrees)
----------------------------------------------------------

Set the clockwise rotation of preview display in degrees.
This does not affect the order of byte array passed in onPreviewFrame(byte[], Camera), JPEG pictures, or recorded videos. 
This affects the preview frames and the picture displayed after snapshot.

怎么理解？
This method is not allowed to be called during preview
Starting from API level 14, this method can be called when preview is active.
经测试，在预览的时候，时调用这个接口是起作用的。

--------------------------------------------------------------------
这段文档里 重要概念
--------------------------------------------------------------------
the orientation of the camera          可能通过 Camera.CameraInfo.orientation 获得
the natural orientation of the device  通过 onOrientationChanged 事件能够得到角度

the top side of the camera sensor      通过上面两个角度可以知道

--------------------------------------------------------------------

----------------------------------------------------------
示例代码：
----------------------------------------------------------

 public static void setCameraDisplayOrientation(Activity activity,
         int cameraId, android.hardware.Camera camera) {
     android.hardware.Camera.CameraInfo info =
             new android.hardware.Camera.CameraInfo();
     android.hardware.Camera.getCameraInfo(cameraId, info);
     int rotation = activity.getWindowManager().getDefaultDisplay()
             .getRotation();
     int degrees = 0;
     switch (rotation) {
         case Surface.ROTATION_0: degrees = 0; break;
         case Surface.ROTATION_90: degrees = 90; break;
         case Surface.ROTATION_180: degrees = 180; break;
         case Surface.ROTATION_270: degrees = 270; break;
     }

     int result;
     if (info.facing == Camera.CameraInfo.CAMERA_FACING_FRONT) {
         result = (info.orientation + degrees) % 360;
         result = (360 - result) % 360;  // compensate the mirror
     } else {  // back-facing
         result = (info.orientation - degrees + 360) % 360;
     }
     camera.setDisplayOrientation(result);
 }